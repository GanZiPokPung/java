훌륭한 코드는 그 자체로 최고의 설명서다. 주석을 추가하기 전에 "주석이 필요없도록 코드를 향상시킬 방법이 없을까?"라고 자문해보자.
- 스티브 맥코넬 

가전 기기의 사용 설명서는 동작 방법을 알려주는 것이다. 코드 내 주석도 이와 마찬가지 역할을 한다. 주석의 목적은 코드가 어떻게 동작하는지를 알려준다. 불행히도 코드 주석은 별로 유용하지 않다. 예를 들면 이미 코드에 있는 내용만 반복하는 경우이다. 더 최악의 경우는 실제 코드와 다른 내용을 말하는 것이다.

이 장에서는 주석을 더 유용하게 만드는 방법에 대해 살펴본다. 

1. 지나치게 많은 주석 없애기
주석이 얼마나 중요한지 한번쯤은 들어봤을 것이다. 맞는 말이지만 중요한 정보(이유)를 설명할 경우에만 그러하다. 

위 코드에서는 주석이 너무나도 많이 들어있다.

코드를 쭉 읽다보면 문서화가 매우 잘되었다고 생각할지도 모르겠다. 주석 측면에서 이 코드를 "훌륭함"이라고 표시할것이다. 하지만 사실이 아니다.

대부분의 주석은 코드가 전하는 내용을 반복할 뿐이니 불필요하다. IF의 끝, FOR의 끝, Class 끝 등은 들여쓰기만 잘해도 알 수 있는 부분이다.

이 불필요한 부분들을 제거하면, 훨씬 간결하게 만들 수 있다. 아래 코드를 보자.

코드를 약간만 바꾸었을 뿐인데 주석이 거의 사라졌다.

먼저 코드 한 줄만 읽으면 바로 알 수 있는 주석은 모두 제거하였다. 코드 블럭의 끝을 표시하는 주석도 모두 없앴다. 

클래스 구조를 강조하는 주석도 모두 제거했다. 자바 코드 규칙에서 정한 클래스 구조만 잘 따르면 이러한 주석은 넣을 필요가 없다.

TODO 주석은 수정 대신 직접 검증하는 명령어를 추가하였다. 만약 수정할 수 없는 경우 문제를 논의하고 이슈를 생성해야 한다.

코드에 뭔가를 덧붙여 설명하지 않는 주석은 아무 의미가 없다.

2. 주석 처리된 코드 제거
대규모 코드 기반에는 주석 처리된 코드 영역이 항상 있다. 이러한 종류의 주석은 잡동사니일 뿐이다.

위 코드에서 리스트 항목 몇 개가 주석 처리되어 있다. 항목이 붙은 주석도 주석 처리되어 있다. 주석이 너무 과하게 쓰였다.

주석 처리된 코드는 심각한 문제이다. 일반적인 주석과 다르게 명확하게 설명해주지 않기 때문이다. 혼란 가중시키는 쓰레기를 코드에 끼얹는 셈이다.

대부분의 프로그래머는 특정 기능을 동작하지 못하도록 코드를 주석 처리 한다. 때로는 훗날 다시 사용할지 모를 코드를 잃어버리고 싶지 않아 주석 처리하기도 한다.

다행히 주석 처리된 코드는 처리하기 무척 쉽다. 그냥 지우면 된다.

주석 처리된 코드는 이해도를 떨어뜨린다. 앞으로 실행되지 않을 텍스트 줄만 늘어날 뿐이다. 

지금까지 프로젝트에서 주석 처리된 코드 주석을 해제하여 사용하는 개발자는 한 번도 본 적이 없다. 오히려 모두 지우려고 한다.

버전 관리 도구(Git)를 사용하고 있다면 지워진 코드 주석을 다시 복구할 수 있다. (필요한 경우는 거의 없겠지만...) 